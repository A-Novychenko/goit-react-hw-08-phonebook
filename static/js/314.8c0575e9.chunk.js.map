{"version":3,"file":"static/js/314.8c0575e9.chunk.js","mappings":"wTAcaA,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MACjBC,GAAsCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAClCI,GAAsCL,EAAAA,EAAAA,UAAS,MAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA7CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAgClC,OACEG,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAS,CAACC,UAAU,MAAMC,SAAS,KAAIJ,SAAA,EACtCF,EAAAA,EAAAA,KAACO,EAAAA,GAAW,KACZJ,EAAAA,EAAAA,MAACK,EAAAA,EAAG,CACFC,GAAI,CACFC,UAAW,EACXC,QAAS,OACTC,cAAe,SACfC,WAAY,UACZX,SAAA,EAEFF,EAAAA,EAAAA,KAACc,EAAAA,EAAM,CAACL,GAAI,CAAEM,EAAG,EAAGC,QAAS,gBAAiBd,UAC5CF,EAAAA,EAAAA,KAACiB,EAAAA,EAAS,OAEZjB,EAAAA,EAAAA,KAACkB,EAAAA,EAAU,CAACb,UAAU,KAAKc,QAAQ,KAAIjB,SAAC,YAGxCC,EAAAA,EAAAA,MAACK,EAAAA,EAAG,CACFH,UAAU,OACVe,SAlDW,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAW,IAAIC,SAASH,EAAEI,QAE1BC,EAAO,CACXC,MAAOJ,EAASK,IAAI,SACpBC,SAAUN,EAASK,IAAI,aAEzBxC,GAAS0C,EAAAA,EAAAA,IAAMJ,IACfL,EAAEI,OAAOM,OACX,EAyCUC,YAAU,EACVvB,GAAI,CAAEwB,GAAI,GAAI/B,SAAA,EAEdF,EAAAA,EAAAA,KAACkC,EAAAA,EAAS,CACRC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,gBACNC,KAAK,QACLC,aAAa,QACbC,SAlDc,SAAArB,GACxB,IAAMsB,EAAYtB,EAAEI,OAAOmB,MAAMC,SAAS,YACpCC,EAAYzB,EAAEI,OAAOmB,MAAMG,OAAS,EAExCpD,GADEgD,IAAaG,GACA,KAInB,EA2CYE,MAAOtD,EACPuD,WAAY,kCAEdjD,EAAAA,EAAAA,KAACkC,EAAAA,EAAS,CACRC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTG,KAAK,WACLD,MAAM,WACNW,KAAK,WACLZ,GAAG,WACHG,aAAa,mBACbC,SAtDiB,SAAArB,GAC3B,IAAM8B,EAAkB9B,EAAEI,OAAOmB,MAAMG,OAAS,EAE9ChD,GADEoD,GACa,KAInB,EAgDYH,MAAOlD,EACPmD,WAAY,6CAEdjD,EAAAA,EAAAA,KAACoD,EAAAA,EAAM,CACLF,KAAK,SACLb,WAAS,EACTlB,QAAQ,YACRV,GAAI,CAAEwB,GAAI,EAAGoB,GAAI,GAAInD,SACtB,qBAQb,EC7Ge,SAASoD,IACtB,OACEtD,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAACb,EAAS,KAGhB,C,0BCNIoE,EAAyBC,EAAQ,MAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,OAChDG,EAAcH,EAAQ,MACtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,kHACD,SACJN,EAAQ,EAAUG,C,uFCLLI,EAAO,SAACC,EAAOC,GAAiB,OAAKC,EAAAA,EAAAA,GAAS,CACzDC,oBAAqB,cAErBC,oBAAqB,YAIrBC,UAAW,aAEXC,qBAAsB,QACrBL,IAAsBD,EAAMO,MAAQ,CACrCC,YAAaR,EAAMS,QAAQC,MAC3B,EACWC,EAAO,SAAAX,GAAK,OAAIE,EAAAA,EAAAA,GAAS,CACpCU,OAAQZ,EAAMO,MAAQP,GAAOS,QAAQI,KAAKC,SACzCd,EAAMe,WAAWC,MAAO,CACzBC,iBAAkBjB,EAAMO,MAAQP,GAAOS,QAAQS,WAAWtB,QAC1D,eAAgB,CAEdqB,iBAAkBjB,EAAMO,MAAQP,GAAOS,QAAQU,OAAOC,QAExD,EAwEF,KAhCA,SAAqBC,GACnB,IAAMC,GAAQC,EAAAA,EAAAA,GAAc,CAC1BD,MAAOD,EACP9C,KAAM,mBAGNtC,EAEEqF,EAFFrF,SAAQuF,EAENF,EADFrB,kBAAAA,OAAiB,IAAAuB,GAAQA,EAE3B,OAAoBtF,EAAAA,EAAAA,MAAMuF,EAAAA,SAAgB,CACxCxF,SAAU,EAAcF,EAAAA,EAAAA,KAAK2F,EAAAA,EAAc,CACzCC,OAAQ,SAAA3B,GAAK,OAlDG,SAACA,GAAqC,IACtD4B,EAAmBC,EADK5B,EAAiB6B,UAAAhD,OAAA,QAAAiD,IAAAD,UAAA,IAAAA,UAAA,GAEvCE,EAAoB,CAAC,EACvB/B,GAAqBD,EAAMiC,cAC7BC,OAAOC,QAAQnC,EAAMiC,cAAcG,SAAQ,SAAAC,GAAmB,IACxDC,EADwDC,GAAA/G,EAAAA,EAAAA,GAAA6G,EAAA,GAAjBG,EAAGD,EAAA,GAAEE,EAAMF,EAAA,GAEtDP,EAAkBhC,EAAM0C,uBAAuBF,GAAKG,QAAQ,OAAQ,KAAO,CACzEnC,YAAmD,OAArC8B,EAAkBG,EAAOhC,cAAmB,EAAS6B,EAAgB5B,KAEvF,IAEF,IAAIkC,GAAgB1C,EAAAA,EAAAA,GAAS,CAC3BH,KAAMA,EAAKC,EAAOC,GAClB,yBAA0B,CACxBI,UAAW,WAEb,YAAa,CACXwC,WAAY7C,EAAMe,WAAW+B,gBAE/BnC,MAAMT,EAAAA,EAAAA,GAAS,CACbhC,OAAQ,GACPyC,EAAKX,GAAQ,CAGd,cAAe,CACbiB,iBAAkBjB,EAAMO,MAAQP,GAAOS,QAAQS,WAAWtB,YAG7DoC,GACGe,EAA2D,OAAzCnB,EAAoB5B,EAAMgD,aAA6F,OAA7DnB,EAAwBD,EAAkBqB,qBAApD,EAAuFpB,EAAsBqB,eAIrL,OAHIH,IACFH,EAAgB,CAACA,EAAeG,IAE3BH,CACT,CAgBuBjB,CAAO3B,EAAOC,EAAkB,IAC/ChE,IAER,C","sources":["components/LoginForm/LoginForm.js","pages/Login.js","../node_modules/@mui/icons-material/Login.js","../node_modules/@mui/material/CssBaseline/CssBaseline.js"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport {\n  Avatar,\n  Button,\n  CssBaseline,\n  TextField,\n  Box,\n  Typography,\n  Container,\n} from '@mui/material';\nimport LoginIcon from '@mui/icons-material/Login';\nimport { logIn } from 'redux/auth/authOperations';\nimport { useState } from 'react';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const [isErrorMail, setIsErrorMail] = useState(null);\n  const [isErrorPass, setIsErrorPass] = useState(null);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const formData = new FormData(e.target);\n\n    const data = {\n      email: formData.get('email'),\n      password: formData.get('password'),\n    };\n    dispatch(logIn(data));\n    e.target.reset();\n  };\n\n  const handleChangeEmail = e => {\n    const validMail = e.target.value.includes('mail.com');\n    const minLength = e.target.value.length > 9;\n    if (validMail && minLength) {\n      setIsErrorMail(null);\n    } else {\n      setIsErrorMail(true);\n    }\n  };\n  const handleChangePassword = e => {\n    const isValidPassword = e.target.value.length > 6;\n    if (isValidPassword) {\n      setIsErrorPass(null);\n    } else {\n      setIsErrorPass(true);\n    }\n  };\n\n  return (\n    <>\n      <Container component=\"div\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'primary.main' }}>\n            <LoginIcon />\n          </Avatar>\n          <Typography component=\"h2\" variant=\"h5\">\n            Log in\n          </Typography>\n          <Box\n            component=\"form\"\n            onSubmit={handleSubmit}\n            noValidate\n            sx={{ mt: 1 }}\n          >\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              onChange={handleChangeEmail}\n              error={isErrorMail}\n              helperText={'Domain must match \"mail.com\"'}\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              onChange={handleChangePassword}\n              error={isErrorPass}\n              helperText={'Password must be more than 7 characters'}\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Log in\n            </Button>\n          </Box>\n        </Box>\n      </Container>\n    </>\n  );\n};\n","import { LoginForm } from 'components/LoginForm';\n\nexport default function Login() {\n  return (\n    <div>\n      <LoginForm />\n    </div>\n  );\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M11 7 9.6 8.4l2.6 2.6H2v2h10.2l-2.6 2.6L11 17l5-5-5-5zm9 12h-8v2h8c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2h-8v2h8v14z\"\n}), 'Login');\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport useThemeProps from '../styles/useThemeProps';\nimport GlobalStyles from '../GlobalStyles';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const html = (theme, enableColorScheme) => _extends({\n  WebkitFontSmoothing: 'antialiased',\n  // Antialiasing.\n  MozOsxFontSmoothing: 'grayscale',\n  // Antialiasing.\n  // Change from `box-sizing: content-box` so that `width`\n  // is not affected by `padding` or `border`.\n  boxSizing: 'border-box',\n  // Fix font resize problem in iOS\n  WebkitTextSizeAdjust: '100%'\n}, enableColorScheme && !theme.vars && {\n  colorScheme: theme.palette.mode\n});\nexport const body = theme => _extends({\n  color: (theme.vars || theme).palette.text.primary\n}, theme.typography.body1, {\n  backgroundColor: (theme.vars || theme).palette.background.default,\n  '@media print': {\n    // Save printer ink.\n    backgroundColor: (theme.vars || theme).palette.common.white\n  }\n});\nexport const styles = (theme, enableColorScheme = false) => {\n  var _theme$components, _theme$components$Mui;\n  const colorSchemeStyles = {};\n  if (enableColorScheme && theme.colorSchemes) {\n    Object.entries(theme.colorSchemes).forEach(([key, scheme]) => {\n      var _scheme$palette;\n      colorSchemeStyles[theme.getColorSchemeSelector(key).replace(/\\s*&/, '')] = {\n        colorScheme: (_scheme$palette = scheme.palette) == null ? void 0 : _scheme$palette.mode\n      };\n    });\n  }\n  let defaultStyles = _extends({\n    html: html(theme, enableColorScheme),\n    '*, *::before, *::after': {\n      boxSizing: 'inherit'\n    },\n    'strong, b': {\n      fontWeight: theme.typography.fontWeightBold\n    },\n    body: _extends({\n      margin: 0\n    }, body(theme), {\n      // Add support for document.body.requestFullScreen().\n      // Other elements, if background transparent, are not supported.\n      '&::backdrop': {\n        backgroundColor: (theme.vars || theme).palette.background.default\n      }\n    })\n  }, colorSchemeStyles);\n  const themeOverrides = (_theme$components = theme.components) == null ? void 0 : (_theme$components$Mui = _theme$components.MuiCssBaseline) == null ? void 0 : _theme$components$Mui.styleOverrides;\n  if (themeOverrides) {\n    defaultStyles = [defaultStyles, themeOverrides];\n  }\n  return defaultStyles;\n};\n\n/**\n * Kickstart an elegant, consistent, and simple baseline to build upon.\n */\nfunction CssBaseline(inProps) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCssBaseline'\n  });\n  const {\n    children,\n    enableColorScheme = false\n  } = props;\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GlobalStyles, {\n      styles: theme => styles(theme, enableColorScheme)\n    }), children]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? CssBaseline.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * You can wrap a node.\n   */\n  children: PropTypes.node,\n  /**\n   * Enable `color-scheme` CSS property to use `theme.palette.mode`.\n   * For more details, check out https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme\n   * For browser support, check out https://caniuse.com/?search=color-scheme\n   * @default false\n   */\n  enableColorScheme: PropTypes.bool\n} : void 0;\nexport default CssBaseline;"],"names":["LoginForm","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","isErrorMail","setIsErrorMail","_useState3","_useState4","isErrorPass","setIsErrorPass","_jsx","_Fragment","children","_jsxs","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","LoginIcon","Typography","variant","onSubmit","e","preventDefault","formData","FormData","target","data","email","get","password","logIn","reset","noValidate","mt","TextField","margin","required","fullWidth","id","label","name","autoComplete","onChange","validMail","value","includes","minLength","length","error","helperText","type","isValidPassword","Button","mb","Login","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","html","theme","enableColorScheme","_extends","WebkitFontSmoothing","MozOsxFontSmoothing","boxSizing","WebkitTextSizeAdjust","vars","colorScheme","palette","mode","body","color","text","primary","typography","body1","backgroundColor","background","common","white","inProps","props","useThemeProps","_props$enableColorSch","React","GlobalStyles","styles","_theme$components","_theme$components$Mui","arguments","undefined","colorSchemeStyles","colorSchemes","Object","entries","forEach","_ref","_scheme$palette","_ref2","key","scheme","getColorSchemeSelector","replace","defaultStyles","fontWeight","fontWeightBold","themeOverrides","components","MuiCssBaseline","styleOverrides"],"sourceRoot":""}