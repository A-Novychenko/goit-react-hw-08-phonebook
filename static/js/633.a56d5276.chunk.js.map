{"version":3,"file":"static/js/633.a56d5276.chunk.js","mappings":"8PAEaA,EAAe,SAAAC,GAAK,OAAIA,EAAMC,MAAO,EACrCC,EAAiB,SAAAF,GAAK,OAAIA,EAAMG,SAASC,KAAM,EAC/CC,EAAkB,SAAAL,GAAK,OAAIA,EAAMG,SAASG,SAAU,EACpDC,EAAc,SAAAP,GAAK,OAAIA,EAAMG,SAASK,KAAM,EAE5CC,GAA0BC,EAAAA,EAAAA,IACrC,CAACR,EAAgBH,IACjB,SAACI,EAAUF,GACT,OAAIE,GAAYA,EAASQ,OAChBR,EAASF,QAAO,SAAAW,GAAO,OAAAA,EAAJC,KACnBC,cAAcC,OAAOC,SAASf,EAAOa,cAAcC,OAAO,IAG1D,EAEX,I,8ECPIE,EAAgB,CACpBJ,KAAM,GACNK,OAAQ,OAGJC,EAASC,EAAAA,GAAW,CACxBP,KAAMO,EAAAA,KAAaC,IAAI,GAAI,mBAAmBC,WAC9CJ,OAAQE,EAAAA,KACLG,MAAM,KAAM,+DACZD,SAAS,gCAGDE,EAAc,WACzB,IAAMC,GAAWC,EAAAA,EAAAA,MACXvB,GAAWwB,EAAAA,EAAAA,IAAYzB,GAEvB0B,GAASC,EAAAA,EAAAA,IAAU,CACvBC,eAAaC,EAAAA,EAAAA,GAAA,GAAOd,GACpBe,iBAAkBb,EAClBc,SAAU,SAACC,EAAMtB,GAAqB,IAAjBuB,EAASvB,EAATuB,UACXtB,EAAiBqB,EAAjBrB,KAAMK,EAAWgB,EAAXhB,OAEd,GAAIf,EAASQ,SAETR,EAASiC,MAAK,SAAAC,GAAO,OAAIA,EAAQxB,OAASA,CAAI,KAC9CV,EAASiC,MAAK,SAAAC,GAAO,OAAIA,EAAQnB,SAAWA,CAAM,KAIlD,YADAoB,MAAM,GAADC,OAAI1B,EAAI,6BAKjBY,GAASe,EAAAA,EAAAA,IAAWN,IACpBC,GACF,IAGF,OACEM,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACFC,GAAI,CACFC,UAAW,EACXC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,GAAI,OACJC,SAAU,KACVT,SAAA,EAEFF,EAAAA,EAAAA,KAACY,EAAAA,EAAM,CAACP,GAAI,CAAEQ,EAAG,EAAGC,QAAS,gBAAiBZ,UAC5CF,EAAAA,EAAAA,KAACe,EAAAA,EAAgB,OAEnBf,EAAAA,EAAAA,KAACgB,EAAAA,EAAU,CAACC,UAAU,KAAKC,QAAQ,KAAIhB,SAAC,iBAIxCC,EAAAA,EAAAA,MAAA,QAAMX,SAAUL,EAAOgC,aAAcd,GAAI,CAAEe,GAAI,GAAIlB,SAAA,EACjDF,EAAAA,EAAAA,KAACqB,EAAAA,EAAS,CACRC,OAAO,SACPC,WAAS,EACTC,GAAG,OACHC,MAAM,OACNrD,KAAK,OACLsD,aAAa,WACbC,WAAS,EACTC,MAAOzC,EAAOM,OAAOrB,KACrByD,SAAU1C,EAAO2C,aACjB/D,MAAOoB,EAAO4C,QAAQ3D,MAAQ4D,QAAQ7C,EAAO8C,OAAO7D,MACpD8D,WAAY/C,EAAO4C,QAAQ3D,MAAQe,EAAO8C,OAAO7D,QAEnD4B,EAAAA,EAAAA,KAACqB,EAAAA,EAAS,CACRC,OAAO,SACPC,WAAS,EACTC,GAAG,SACHpD,KAAK,SACLqD,MAAM,QACNU,KAAK,MACLT,aAAa,SACbE,MAAOzC,EAAOM,OAAOhB,OACrBoD,SAAU1C,EAAO2C,aACjB/D,MAAOoB,EAAO4C,QAAQtD,QAAUuD,QAAQ7C,EAAO8C,OAAOxD,QACtDyD,WAAY/C,EAAO4C,QAAQtD,QAAUU,EAAO8C,OAAOxD,UAErDuB,EAAAA,EAAAA,KAACoC,EAAAA,EAAM,CACLD,KAAK,SACLZ,WAAS,EACTL,QAAQ,YACRb,GAAI,CAAEe,GAAI,EAAGiB,GAAI,GAAInC,SACtB,uBAOX,E,kDCjGaoC,EAAU,SAAHnE,GAA8B,IAAxBC,EAAID,EAAJC,KAAMK,EAAMN,EAANM,OAAQ+C,EAAErD,EAAFqD,GACtCe,GAAsCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA9CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAC5BzD,GAAWC,EAAAA,EAAAA,MAOjB,OACEe,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACFa,UAAW,MACXZ,GAAI,CACFE,QAAS,OACTsC,eAAgB,gBAChBpC,WAAY,SACZqC,MAAO,EACPpC,GAAI,OACJqC,OAAQ,iBACRC,aAAc,GACd9C,SAAA,EAEFC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACFC,GAAI,CACFE,QAAS,OACTE,WAAY,SACZqC,MAAO,MACPG,GAAI,GACJ/C,SAAA,EAEFF,EAAAA,EAAAA,KAACkD,EAAAA,EAAgB,CAAC7C,GAAI,CAAE8C,GAAI,MAC5BnD,EAAAA,EAAAA,KAACgB,EAAAA,EAAU,CAAAd,SAAE9B,QAGf4B,EAAAA,EAAAA,KAACI,EAAAA,EAAG,CACFC,GAAI,CACF+C,UAAW,SACXN,MAAO,IACPO,OAAQ,OACRC,GAAI,IACJC,YAAa,iBACbC,WAAY,kBACZtD,UAEFF,EAAAA,EAAAA,KAACgB,EAAAA,EAAU,CAACX,GAAI,CAAE+C,UAAW,UAAWlD,SAAEzB,OAG5CuB,EAAAA,EAAAA,KAACyD,EAAAA,EAAU,CACTC,KAAK,MACL,aAAW,SACXvB,KAAK,SACLwB,QAhDa,WACnB3E,GAAS4E,EAAAA,EAAAA,IAAcpC,IACvBoB,GAAe,EACjB,EA8CQiB,SAAUlB,EACVtC,GAAI,CAAE8C,GAAI,GAAIjD,UAEdF,EAAAA,EAAAA,KAAC8D,EAAAA,EAAU,UAKrB,E,mBC3DaC,GCTOC,EAAAA,GAAAA,EAAQC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+BAIPF,EAAAA,GAAAA,IAAUG,IAAAA,GAAAD,EAAAA,EAAAA,GAAA,+CAKTF,EAAAA,GAAAA,OAAaI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,yLDAR,WACzB,IAAMG,GAAkBnF,EAAAA,EAAAA,IAAYlB,GAC9BH,GAAYqB,EAAAA,EAAAA,IAAYtB,GACxBG,GAAQmB,EAAAA,EAAAA,IAAYpB,GAEpBkB,GAAWC,EAAAA,EAAAA,MAMjB,OAJAqF,EAAAA,EAAAA,YAAU,WACRtF,GAASuF,EAAAA,EAAAA,MACX,GAAG,CAACvF,KAGFmB,EAAAA,EAAAA,MAAAF,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,MAAA,OAAKqE,MAAO,CAAEnB,OAAQ,QAASnD,SAAA,CAC5BrC,IAAamC,EAAAA,EAAAA,KAAA,KAAAE,SAAG,qBAChBnC,IAASiC,EAAAA,EAAAA,KAAA,KAAGwE,MAAO,CAAEC,MAAO,OAAQvE,SAAEnC,QAGzCiC,EAAAA,EAAAA,KAACI,EAAAA,EAAG,CACFa,UAAW,KACXZ,GAAI,CACFE,QAAS,OACTC,cAAe,SACfkE,IAAK,GACLxE,SAEDmE,EAAgBM,KAAI,SAAAxG,GAAA,IAAGC,EAAID,EAAJC,KAAMoD,EAAErD,EAAFqD,GAAI/C,EAAMN,EAANM,OAAM,OACtCuB,EAAAA,EAAAA,KAACI,EAAAA,EAAG,CACFa,UAAW,KAEXZ,GAAI,CACFE,QAAS,OACTsC,eAAgB,gBAChBpC,WAAY,UACZP,UAEFF,EAAAA,EAAAA,KAACsC,EAAO,CAAClE,KAAMA,EAAMK,OAAQA,EAAQ+C,GAAIA,KAPpCA,EAQD,QAKhB,G,GEnDoBwC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gGAKTF,EAAAA,GAAAA,GAASG,IAAAA,GAAAD,EAAAA,EAAAA,GAAA,iH,kBCDhBU,EAAS,WACpB,IAAM5F,GAAWC,EAAAA,EAAAA,MACXzB,GAAS0B,EAAAA,EAAAA,IAAY5B,GAM3B,OACE0C,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAAC6E,EAAAA,EAAK,CACJxE,GAAI,CAAEE,QAAS,QAASuC,MAAO,GAAKpC,GAAI,OAAQoE,UAAW,EAAGC,GAAI,GAClE5C,KAAK,OACL/D,KAAK,SACL4G,QAAQ,yFACRC,MAAM,+FACNpG,UAAQ,EACR+C,MAAOpE,EACPqE,SAde,SAAAqD,GACnBlG,GAASmG,EAAAA,EAAAA,GAAeD,EAAEE,OAAOxD,OACnC,EAaMyD,YAAY,YAIpB,ECzBe,SAASC,IACtB,OACEnF,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAACjB,EAAW,KACZiB,EAAAA,EAAAA,KAAC4E,EAAM,KACP5E,EAAAA,EAAAA,KAAC+D,EAAW,MAGlB,C","sources":["redux/contacts/contactsSelectors.js","components/ContactForm/ContactForm.js","components/Contact/Contact.js","components/ContactList/ContactList.js","components/Contact/Contact.styled.js","components/ContactList/ContactList.styled.js","components/Filter/Filter.js","pages/Contacts.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectFilter = state => state.filter;\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectedVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    if (contacts && contacts.length) {\n      return contacts.filter(({ name }) =>\n        name.toLowerCase().trim().includes(filter.toLowerCase().trim())\n      );\n    } else {\n      return [];\n    }\n  }\n);\n","import * as Yup from 'yup';\nimport 'yup-phone-lite';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/contactsOperations';\nimport { selectContacts } from 'redux/contacts/contactsSelectors';\nimport { useFormik } from 'formik';\n\nimport { Avatar, Button, TextField, Box, Typography } from '@mui/material';\nimport PersonAddAltIcon from '@mui/icons-material/PersonAddAlt';\n\nconst INITIAL_STATE = {\n  name: '',\n  number: '+38',\n};\n\nconst Schema = Yup.object({\n  name: Yup.string().max(20, 'Max: 20 symbols').required(),\n  number: Yup.string()\n    .phone('UK', 'Please enter a valid phone number in the format for UKRAINE')\n    .required('A phone number is required'),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const formik = useFormik({\n    initialValues: { ...INITIAL_STATE },\n    validationSchema: Schema,\n    onSubmit: (values, { resetForm }) => {\n      const { name, number } = values;\n\n      if (contacts.length) {\n        const isInConntacts =\n          contacts.find(contact => contact.name === name) ||\n          contacts.find(contact => contact.number === number);\n\n        if (isInConntacts) {\n          alert(`${name} is already in contacts.`);\n          return;\n        }\n      }\n\n      dispatch(addContact(values));\n      resetForm();\n    },\n  });\n\n  return (\n    <>\n      <Box\n        sx={{\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          mx: 'auto',\n          maxWidth: 400,\n        }}\n      >\n        <Avatar sx={{ m: 1, bgcolor: 'primary.main' }}>\n          <PersonAddAltIcon />\n        </Avatar>\n        <Typography component=\"h2\" variant=\"h5\">\n          Add contact\n        </Typography>\n\n        <form onSubmit={formik.handleSubmit} sx={{ mt: 1 }}>\n          <TextField\n            margin=\"normal\"\n            fullWidth\n            id=\"name\"\n            label=\"Name\"\n            name=\"name\"\n            autoComplete=\"userName\"\n            autoFocus\n            value={formik.values.name}\n            onChange={formik.handleChange}\n            error={formik.touched.name && Boolean(formik.errors.name)}\n            helperText={formik.touched.name && formik.errors.name}\n          />\n          <TextField\n            margin=\"normal\"\n            fullWidth\n            id=\"number\"\n            name=\"number\"\n            label=\"Phone\"\n            type=\"tel\"\n            autoComplete=\"number\"\n            value={formik.values.number}\n            onChange={formik.handleChange}\n            error={formik.touched.number && Boolean(formik.errors.number)}\n            helperText={formik.touched.number && formik.errors.number}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n          >\n            Add contact\n          </Button>\n        </form>\n      </Box>\n    </>\n  );\n};\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Typography, IconButton, Box } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport ContactPhoneIcon from '@mui/icons-material/ContactPhone';\n\nimport { deleteContact } from 'redux/contacts/contactsOperations';\n\nexport const Contact = ({ name, number, id }) => {\n  const [isBtnActive, setIsBtnActive] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleDelete = () => {\n    dispatch(deleteContact(id));\n    setIsBtnActive(true);\n  };\n\n  return (\n    <>\n      <Box\n        component={'div'}\n        sx={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          width: 1,\n          mx: 'auto',\n          border: '1px solid grey',\n          borderRadius: 2,\n        }}\n      >\n        <Box\n          sx={{\n            display: 'flex',\n            alignItems: 'center',\n            width: '33%',\n            ml: 2,\n          }}\n        >\n          <ContactPhoneIcon sx={{ mr: 2 }} />\n          <Typography>{name}</Typography>\n        </Box>\n\n        <Box\n          sx={{\n            textAlign: 'center',\n            width: 200,\n            height: '100%',\n            py: 1.2,\n            borderRight: '1px solid grey',\n            borderLeft: '1px solid grey',\n          }}\n        >\n          <Typography sx={{ textAlign: 'center' }}>{number}</Typography>\n        </Box>\n\n        <IconButton\n          edge=\"end\"\n          aria-label=\"delete\"\n          type=\"button\"\n          onClick={handleDelete}\n          disabled={isBtnActive}\n          sx={{ mr: 2 }}\n        >\n          <DeleteIcon />\n        </IconButton>\n      </Box>\n    </>\n  );\n};\n\nContact.propTypes = {\n  id: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Box } from '@mui/material';\nimport { Contact } from 'components/Contact';\nimport { fetchContacts } from 'redux/contacts/contactsOperations';\nimport {\n  selectError,\n  selectIsLoading,\n  selectedVisibleContacts,\n} from 'redux/contacts/contactsSelectors';\n\nexport const ContactList = () => {\n  const visibleContacts = useSelector(selectedVisibleContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <div style={{ height: '16px' }}>\n        {isLoading && <p>Loading tasks...</p>}\n        {error && <p style={{ color: 'red' }}>{error}</p>}\n      </div>\n\n      <Box\n        component={'ul'}\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          gap: 1,\n        }}\n      >\n        {visibleContacts.map(({ name, id, number }) => (\n          <Box\n            component={'li'}\n            key={id}\n            sx={{\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n            }}\n          >\n            <Contact name={name} number={number} id={id}></Contact>\n          </Box>\n        ))}\n      </Box>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Name = styled.p`\n  font-weight: 500;\n`;\n\nexport const Inner = styled.div`\n  /* display: flex;\n  gap: 8px; */\n`;\n\nexport const Remove = styled.button`\n  background-color: transparent;\n  border: none;\n  color: red;\n  border-radius: 4px;\n  cursor: pointer;\n\n  :hover {\n    background-color: red;\n    color: white;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  /* display: flex;\n  flex-direction: column;\n  justify-content: space-between; */\n`;\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n\n  /*  max-width: 360px; */\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Input } from '@mui/material';\n\nimport { selectFilter } from 'redux/contacts/contactsSelectors';\nimport { setFilterValue } from 'redux/contacts/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleChange = e => {\n    dispatch(setFilterValue(e.target.value));\n  };\n\n  return (\n    <>\n      <Input\n        sx={{ display: 'block', width: 0.5, mx: 'auto', boxShadow: 1, px: 2 }}\n        type=\"text\"\n        name=\"filter\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        value={filter}\n        onChange={handleChange}\n        placeholder=\"Filter\"\n      />\n    </>\n  );\n};\n","import { ContactForm } from 'components/ContactForm';\nimport { ContactList } from 'components/ContactList';\nimport { Filter } from 'components/Filter';\n\nexport default function Contacts() {\n  return (\n    <div>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n"],"names":["selectFilter","state","filter","selectContacts","contacts","items","selectIsLoading","isLoading","selectError","error","selectedVisibleContacts","createSelector","length","_ref","name","toLowerCase","trim","includes","INITIAL_STATE","number","Schema","Yup","max","required","phone","ContactForm","dispatch","useDispatch","useSelector","formik","useFormik","initialValues","_objectSpread","validationSchema","onSubmit","values","resetForm","find","contact","alert","concat","addContact","_jsx","_Fragment","children","_jsxs","Box","sx","marginTop","display","flexDirection","alignItems","mx","maxWidth","Avatar","m","bgcolor","PersonAddAltIcon","Typography","component","variant","handleSubmit","mt","TextField","margin","fullWidth","id","label","autoComplete","autoFocus","value","onChange","handleChange","touched","Boolean","errors","helperText","type","Button","mb","Contact","_useState","useState","_useState2","_slicedToArray","isBtnActive","setIsBtnActive","justifyContent","width","border","borderRadius","ml","ContactPhoneIcon","mr","textAlign","height","py","borderRight","borderLeft","IconButton","edge","onClick","deleteContact","disabled","DeleteIcon","ContactList","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","visibleContacts","useEffect","fetchContacts","style","color","gap","map","Filter","Input","boxShadow","px","pattern","title","e","setFilterValue","target","placeholder","Contacts"],"sourceRoot":""}