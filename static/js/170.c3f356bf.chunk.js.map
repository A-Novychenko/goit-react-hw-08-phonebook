{"version":3,"file":"static/js/170.c3f356bf.chunk.js","mappings":"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","sources":["redux/contacts/contactsSelectors.js","components/ContactForm/ContactForm.js","components/Contact/Contact.js","components/ContactList/ContactList.js","components/Contact/Contact.styled.js","components/ContactList/ContactList.styled.js","components/Filter/Filter.js","components/Modal/Modal.js","pages/Contacts.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectFilter = state => state.filter;\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectedVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    if (contacts && contacts.length) {\n      return contacts.filter(({ name }) =>\n        name.toLowerCase().trim().includes(filter.toLowerCase().trim())\n      );\n    } else {\n      return [];\n    }\n  }\n);\n","import * as Yup from 'yup';\nimport 'yup-phone-lite';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/contactsOperations';\nimport { selectContacts } from 'redux/contacts/contactsSelectors';\nimport { useFormik } from 'formik';\nimport PropTypes from 'prop-types';\n\nimport { Avatar, Button, TextField, Box, Typography } from '@mui/material';\nimport PersonAddAltIcon from '@mui/icons-material/PersonAddAlt';\n\nconst INITIAL_STATE = {\n  name: '',\n  number: '+38',\n};\n\nconst Schema = Yup.object({\n  name: Yup.string().max(20, 'Max: 20 symbols').required(),\n  number: Yup.string()\n    .phone('UK', 'Please enter a valid phone number in the format for UKRAINE')\n    .required('A phone number is required'),\n});\n\nexport const ContactForm = ({ onToggleModal }) => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const formik = useFormik({\n    initialValues: { ...INITIAL_STATE },\n    validationSchema: Schema,\n    onSubmit: (values, { resetForm }) => {\n      const { name, number } = values;\n\n      if (contacts.length) {\n        const isInConntacts =\n          contacts.find(contact => contact.name === name) ||\n          contacts.find(contact => contact.number === number);\n\n        if (isInConntacts) {\n          alert(`${name} is already in contacts.`);\n          return;\n        }\n      }\n\n      dispatch(addContact(values));\n      resetForm();\n      onToggleModal();\n    },\n  });\n\n  return (\n    <>\n      <Box\n        sx={{\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          mx: 'auto',\n          width: 500,\n          height: 380,\n        }}\n      >\n        <Avatar sx={{ m: 1, bgcolor: 'primary.main' }}>\n          <PersonAddAltIcon />\n        </Avatar>\n        <Typography component=\"h2\" variant=\"h5\">\n          Add contact\n        </Typography>\n\n        <form onSubmit={formik.handleSubmit} autoComplete=\"off\" sx={{ mt: 1 }}>\n          <TextField\n            margin=\"normal\"\n            fullWidth\n            id=\"name\"\n            label=\"Name\"\n            name=\"name\"\n            // autoComplete=\"userName\"\n            value={formik.values.name}\n            onChange={formik.handleChange}\n            error={formik.touched.name && Boolean(formik.errors.name)}\n            helperText={formik.touched.name && formik.errors.name}\n          />\n\n          <TextField\n            margin=\"normal\"\n            fullWidth\n            id=\"number\"\n            name=\"number\"\n            label=\"Phone\"\n            type=\"tel\"\n            // autoComplete=\"number\"\n            value={formik.values.number}\n            onChange={formik.handleChange}\n            error={formik.touched.number && Boolean(formik.errors.number)}\n            helperText={formik.touched.number && formik.errors.number}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n          >\n            Add contact\n          </Button>\n        </form>\n      </Box>\n    </>\n  );\n};\n\nContactForm.propTypes = {\n  onToggleModal: PropTypes.func.isRequired,\n};\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Typography, IconButton, Box } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport ContactPhoneIcon from '@mui/icons-material/ContactPhone';\n\nimport { deleteContact } from 'redux/contacts/contactsOperations';\n\nexport const Contact = ({ name, number, id }) => {\n  const [isBtnActive, setIsBtnActive] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleDelete = () => {\n    dispatch(deleteContact(id));\n    setIsBtnActive(true);\n  };\n\n  return (\n    <>\n      <Box\n        component={'div'}\n        sx={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          width: 1,\n          mx: 'auto',\n          border: '1px solid #1976d2',\n          borderRadius: 1,\n        }}\n      >\n        <Box\n          sx={{\n            display: 'flex',\n            alignItems: 'center',\n            width: '33%',\n            ml: 2,\n          }}\n        >\n          <ContactPhoneIcon sx={{ mr: 2, color: '#1976d2' }} />\n          <Typography>{name}</Typography>\n        </Box>\n\n        <Box\n          sx={{\n            textAlign: 'center',\n            width: 200,\n            height: '100%',\n            py: 1.2,\n            borderRight: '1px solid #1976d2',\n            borderLeft: '1px solid #1976d2',\n          }}\n        >\n          <Typography sx={{ textAlign: 'center' }}>{number}</Typography>\n        </Box>\n\n        <IconButton\n          edge=\"end\"\n          aria-label=\"delete\"\n          type=\"button\"\n          onClick={handleDelete}\n          disabled={isBtnActive}\n          sx={{ mr: 2 }}\n        >\n          <DeleteIcon />\n        </IconButton>\n      </Box>\n    </>\n  );\n};\n\nContact.propTypes = {\n  id: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Box } from '@mui/material';\nimport { Contact } from 'components/Contact';\nimport { fetchContacts } from 'redux/contacts/contactsOperations';\nimport {\n  selectError,\n  selectIsLoading,\n  selectedVisibleContacts,\n} from 'redux/contacts/contactsSelectors';\n\nexport const ContactList = () => {\n  const visibleContacts = useSelector(selectedVisibleContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <div style={{ height: '16px' }}>\n        {isLoading && <p>Loading tasks...</p>}\n        {error && <p style={{ color: 'red' }}>{error}</p>}\n      </div>\n\n      <Box\n        component={'ul'}\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          gap: 1,\n        }}\n      >\n        {visibleContacts.map(({ name, id, number }) => (\n          <Box\n            component={'li'}\n            key={id}\n            sx={{\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n            }}\n          >\n            <Contact name={name} number={number} id={id}></Contact>\n          </Box>\n        ))}\n      </Box>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Name = styled.p`\n  font-weight: 500;\n`;\n\nexport const Inner = styled.div`\n  /* display: flex;\n  gap: 8px; */\n`;\n\nexport const Remove = styled.button`\n  background-color: transparent;\n  border: none;\n  color: red;\n  border-radius: 4px;\n  cursor: pointer;\n\n  :hover {\n    background-color: red;\n    color: white;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  /* display: flex;\n  flex-direction: column;\n  justify-content: space-between; */\n`;\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n\n  /*  max-width: 360px; */\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { TextField } from '@mui/material';\n\nimport { selectFilter } from 'redux/contacts/contactsSelectors';\nimport { setFilterValue } from 'redux/contacts/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleChange = e => {\n    dispatch(setFilterValue(e.target.value));\n  };\n\n  return (\n    <>\n      <TextField\n        label=\"Search contact\"\n        variant=\"filled\"\n        sx={{\n          display: 'flex',\n          width: 0.5,\n          mt: 5,\n          mb: 2,\n          mx: 'auto',\n          boxShadow: 1,\n          color: '#1976d2',\n          bgcolor: 'rgba(25, 118, 210, 0.1)',\n        }}\n        autoComplete=\"off\"\n        type=\"text\"\n        name=\"filter\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        value={filter}\n        onChange={handleChange}\n        placeholder=\"search\"\n      />\n    </>\n  );\n};\n","import PropTypes from 'prop-types';\nimport Backdrop from '@mui/material/Backdrop';\nimport Box from '@mui/material/Box';\nimport Modal from '@mui/material/Modal';\nimport Fade from '@mui/material/Fade';\n\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 600,\n  bgcolor: 'background.paper',\n  border: '2px solid #1976d2',\n  boxShadow: 24,\n  p: 4,\n  borderRadius: 2,\n};\n\nexport const TransitionsModal = ({ children, handleClose, open }) => (\n  <div>\n    <Modal\n      aria-labelledby=\"add-contact\"\n      aria-describedby=\"add-contact-form\"\n      open={open}\n      onClose={handleClose}\n      closeAfterTransition\n      slots={{ backdrop: Backdrop }}\n      slotProps={{\n        backdrop: {\n          timeout: 500,\n        },\n      }}\n    >\n      <Fade in={open}>\n        <Box sx={style}>{children}</Box>\n      </Fade>\n    </Modal>\n  </div>\n);\n\nTransitionsModal.propTypes = {\n  handleClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n};\n","import { useState } from 'react';\n\nimport { Button, Typography } from '@mui/material';\nimport PersonAddAltIcon from '@mui/icons-material/PersonAddAlt';\n\n// import { Modal } from 'components/Modal';\nimport { ContactForm } from 'components/ContactForm';\nimport { ContactList } from 'components/ContactList';\nimport { Filter } from 'components/Filter';\nimport { TransitionsModal } from 'components/Modal/Modal';\n\nexport default function Contacts() {\n  // const [showModal, setShowModal] = useState(false);\n\n  // const hendleShowModal = () => setShowModal(prevState => !prevState);\n  const [open, setOpen] = useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  return (\n    <div>\n      <Button\n        onClick={handleOpen}\n        variant=\"contained\"\n        sx={{ display: 'flex', mx: 'auto', my: 4 }}\n      >\n        <PersonAddAltIcon fontSize=\"large\" />\n        <Typography ml={2}> add contact</Typography>\n      </Button>\n      <Filter />\n      <ContactList />\n\n      {open && (\n        <TransitionsModal handleClose={handleClose} open={open}>\n          <ContactForm onToggleModal={handleClose} />\n        </TransitionsModal>\n      )}\n    </div>\n  );\n}\n"],"names":["selectFilter","state","filter","selectContacts","contacts","items","selectIsLoading","isLoading","selectError","error","selectedVisibleContacts","createSelector","length","_ref","name","toLowerCase","trim","includes","INITIAL_STATE","number","Schema","Yup","max","required","phone","ContactForm","onToggleModal","dispatch","useDispatch","useSelector","formik","useFormik","initialValues","_objectSpread","validationSchema","onSubmit","values","_ref2","resetForm","find","contact","alert","concat","addContact","_jsx","_Fragment","children","_jsxs","Box","sx","marginTop","display","flexDirection","alignItems","mx","width","height","Avatar","m","bgcolor","PersonAddAltIcon","Typography","component","variant","handleSubmit","autoComplete","mt","TextField","margin","fullWidth","id","label","value","onChange","handleChange","touched","Boolean","errors","helperText","type","Button","mb","Contact","_useState","useState","_useState2","_slicedToArray","isBtnActive","setIsBtnActive","justifyContent","border","borderRadius","ml","ContactPhoneIcon","mr","color","textAlign","py","borderRight","borderLeft","IconButton","edge","onClick","deleteContact","disabled","DeleteIcon","ContactList","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","visibleContacts","useEffect","fetchContacts","style","gap","map","Filter","boxShadow","pattern","title","e","setFilterValue","target","placeholder","position","top","left","transform","p","TransitionsModal","handleClose","open","Modal","onClose","closeAfterTransition","slots","backdrop","Backdrop","slotProps","timeout","Fade","in","Contacts","setOpen","my","fontSize"],"sourceRoot":""}