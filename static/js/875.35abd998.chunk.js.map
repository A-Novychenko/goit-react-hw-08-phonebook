{"version":3,"file":"static/js/875.35abd998.chunk.js","mappings":"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","sources":["components/Modal/Modal.styled.js","components/Modal/Modal.js","redux/contacts/contactsSelectors.js","components/ContactForm/ContactForm.js","components/Contact/Contact.js","components/ContactList/ContactList.js","components/Contact/Contact.styled.js","components/ContactList/ContactList.styled.js","components/Filter/Filter.js","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`;\n\nexport const ModalContent = styled.div`\n  max-width: calc(100vw - 48px);\n  max-height: calc(100vh - 24px);\n  color: white;\n  background-color: #fff;\n  padding: 40px;\n  border-radius: 8px;\n`;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { ModalContent, Overlay } from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const Modal = ({ onToggleModal, children }) => {\n  useEffect(() => {\n    const hendleESC = e => {\n      if (e.code === 'Escape') {\n        onToggleModal();\n      }\n    };\n\n    window.addEventListener('keydown', hendleESC);\n\n    return () => window.removeEventListener('keydown', hendleESC);\n  }, [onToggleModal]);\n\n  const hendleBackdrop = e => {\n    if (e.currentTarget === e.target) {\n      onToggleModal();\n    }\n  };\n\n  return createPortal(\n    <>\n      <Overlay onClick={hendleBackdrop}>\n        <ModalContent>{children}</ModalContent>\n      </Overlay>\n    </>,\n    modalRoot\n  );\n};\n\nModal.propTypes = {\n  onToggleModal: PropTypes.func.isRequired,\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectFilter = state => state.filter;\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectedVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    if (contacts && contacts.length) {\n      return contacts.filter(({ name }) =>\n        name.toLowerCase().trim().includes(filter.toLowerCase().trim())\n      );\n    } else {\n      return [];\n    }\n  }\n);\n","import * as Yup from 'yup';\nimport 'yup-phone-lite';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/contactsOperations';\nimport { selectContacts } from 'redux/contacts/contactsSelectors';\nimport { useFormik } from 'formik';\nimport PropTypes from 'prop-types';\n\nimport { Avatar, Button, TextField, Box, Typography } from '@mui/material';\nimport PersonAddAltIcon from '@mui/icons-material/PersonAddAlt';\n\nconst INITIAL_STATE = {\n  name: '',\n  number: '+38',\n};\n\nconst Schema = Yup.object({\n  name: Yup.string().max(20, 'Max: 20 symbols').required(),\n  number: Yup.string()\n    .phone('UK', 'Please enter a valid phone number in the format for UKRAINE')\n    .required('A phone number is required'),\n});\n\nexport const ContactForm = ({ onToggleModal }) => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const formik = useFormik({\n    initialValues: { ...INITIAL_STATE },\n    validationSchema: Schema,\n    onSubmit: (values, { resetForm }) => {\n      const { name, number } = values;\n\n      if (contacts.length) {\n        const isInConntacts =\n          contacts.find(contact => contact.name === name) ||\n          contacts.find(contact => contact.number === number);\n\n        if (isInConntacts) {\n          alert(`${name} is already in contacts.`);\n          return;\n        }\n      }\n\n      dispatch(addContact(values));\n      resetForm();\n      onToggleModal();\n    },\n  });\n\n  return (\n    <>\n      <Box\n        sx={{\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          mx: 'auto',\n          width: 500,\n          height: 380,\n        }}\n      >\n        <Avatar sx={{ m: 1, bgcolor: 'primary.main' }}>\n          <PersonAddAltIcon />\n        </Avatar>\n        <Typography component=\"h2\" variant=\"h5\">\n          Add contact\n        </Typography>\n\n        <form onSubmit={formik.handleSubmit} autoComplete=\"off\" sx={{ mt: 1 }}>\n          <TextField\n            margin=\"normal\"\n            fullWidth\n            id=\"name\"\n            label=\"Name\"\n            name=\"name\"\n            // autoComplete=\"userName\"\n            value={formik.values.name}\n            onChange={formik.handleChange}\n            error={formik.touched.name && Boolean(formik.errors.name)}\n            helperText={formik.touched.name && formik.errors.name}\n          />\n\n          <TextField\n            margin=\"normal\"\n            fullWidth\n            id=\"number\"\n            name=\"number\"\n            label=\"Phone\"\n            type=\"tel\"\n            // autoComplete=\"number\"\n            value={formik.values.number}\n            onChange={formik.handleChange}\n            error={formik.touched.number && Boolean(formik.errors.number)}\n            helperText={formik.touched.number && formik.errors.number}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n          >\n            Add contact\n          </Button>\n        </form>\n      </Box>\n    </>\n  );\n};\n\nContactForm.propTypes = {\n  onToggleModal: PropTypes.func.isRequired,\n};\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Typography, IconButton, Box } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport ContactPhoneIcon from '@mui/icons-material/ContactPhone';\n\nimport { deleteContact } from 'redux/contacts/contactsOperations';\n\nexport const Contact = ({ name, number, id }) => {\n  const [isBtnActive, setIsBtnActive] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleDelete = () => {\n    dispatch(deleteContact(id));\n    setIsBtnActive(true);\n  };\n\n  return (\n    <>\n      <Box\n        component={'div'}\n        sx={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          width: 1,\n          mx: 'auto',\n          border: '1px solid #1976d2',\n          borderRadius: 1,\n        }}\n      >\n        <Box\n          sx={{\n            display: 'flex',\n            alignItems: 'center',\n            width: '33%',\n            ml: 2,\n          }}\n        >\n          <ContactPhoneIcon sx={{ mr: 2, color: '#1976d2' }} />\n          <Typography>{name}</Typography>\n        </Box>\n\n        <Box\n          sx={{\n            textAlign: 'center',\n            width: 200,\n            height: '100%',\n            py: 1.2,\n            borderRight: '1px solid #1976d2',\n            borderLeft: '1px solid #1976d2',\n          }}\n        >\n          <Typography sx={{ textAlign: 'center' }}>{number}</Typography>\n        </Box>\n\n        <IconButton\n          edge=\"end\"\n          aria-label=\"delete\"\n          type=\"button\"\n          onClick={handleDelete}\n          disabled={isBtnActive}\n          sx={{ mr: 2 }}\n        >\n          <DeleteIcon />\n        </IconButton>\n      </Box>\n    </>\n  );\n};\n\nContact.propTypes = {\n  id: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Box } from '@mui/material';\nimport { Contact } from 'components/Contact';\nimport { fetchContacts } from 'redux/contacts/contactsOperations';\nimport {\n  selectError,\n  selectIsLoading,\n  selectedVisibleContacts,\n} from 'redux/contacts/contactsSelectors';\n\nexport const ContactList = () => {\n  const visibleContacts = useSelector(selectedVisibleContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <div style={{ height: '16px' }}>\n        {isLoading && <p>Loading tasks...</p>}\n        {error && <p style={{ color: 'red' }}>{error}</p>}\n      </div>\n\n      <Box\n        component={'ul'}\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          gap: 1,\n        }}\n      >\n        {visibleContacts.map(({ name, id, number }) => (\n          <Box\n            component={'li'}\n            key={id}\n            sx={{\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n            }}\n          >\n            <Contact name={name} number={number} id={id}></Contact>\n          </Box>\n        ))}\n      </Box>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Name = styled.p`\n  font-weight: 500;\n`;\n\nexport const Inner = styled.div`\n  /* display: flex;\n  gap: 8px; */\n`;\n\nexport const Remove = styled.button`\n  background-color: transparent;\n  border: none;\n  color: red;\n  border-radius: 4px;\n  cursor: pointer;\n\n  :hover {\n    background-color: red;\n    color: white;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  /* display: flex;\n  flex-direction: column;\n  justify-content: space-between; */\n`;\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n\n  /*  max-width: 360px; */\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { TextField } from '@mui/material';\n\nimport { selectFilter } from 'redux/contacts/contactsSelectors';\nimport { setFilterValue } from 'redux/contacts/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleChange = e => {\n    dispatch(setFilterValue(e.target.value));\n  };\n\n  return (\n    <>\n      <TextField\n        label=\"Search contact\"\n        variant=\"filled\"\n        sx={{\n          display: 'flex',\n          width: 0.5,\n          mt: 5,\n          mb: 2,\n          mx: 'auto',\n          boxShadow: 1,\n          color: '#1976d2',\n          bgcolor: 'rgba(25, 118, 210, 0.1)',\n        }}\n        autoComplete=\"off\"\n        type=\"text\"\n        name=\"filter\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        value={filter}\n        onChange={handleChange}\n        placeholder=\"search\"\n      />\n    </>\n  );\n};\n","import { useState } from 'react';\n\nimport { Button, Typography } from '@mui/material';\nimport PersonAddAltIcon from '@mui/icons-material/PersonAddAlt';\n\nimport { Modal } from 'components/Modal';\nimport { ContactForm } from 'components/ContactForm';\nimport { ContactList } from 'components/ContactList';\nimport { Filter } from 'components/Filter';\n\nexport default function Contacts() {\n  const [showModal, setShowModal] = useState(false);\n\n  const hendleShowModal = () => setShowModal(prevState => !prevState);\n\n  return (\n    <div>\n      <Button\n        onClick={hendleShowModal}\n        variant=\"contained\"\n        sx={{ display: 'flex', mx: 'auto', my: 4 }}\n      >\n        <PersonAddAltIcon fontSize=\"large\" />\n        <Typography ml={2}> add contact</Typography>\n      </Button>\n      <Filter />\n      <ContactList />\n\n      {showModal && (\n        <Modal onToggleModal={hendleShowModal}>\n          <ContactForm onToggleModal={hendleShowModal} />\n        </Modal>\n      )}\n    </div>\n  );\n}\n"],"names":["Overlay","styled","_templateObject","_taggedTemplateLiteral","ModalContent","_templateObject2","modalRoot","document","querySelector","Modal","_ref","onToggleModal","children","useEffect","hendleESC","e","code","window","addEventListener","removeEventListener","createPortal","_jsx","_Fragment","onClick","currentTarget","target","selectFilter","state","filter","selectContacts","contacts","items","selectIsLoading","isLoading","selectError","error","selectedVisibleContacts","createSelector","length","name","toLowerCase","trim","includes","INITIAL_STATE","number","Schema","Yup","max","required","phone","ContactForm","dispatch","useDispatch","useSelector","formik","useFormik","initialValues","_objectSpread","validationSchema","onSubmit","values","_ref2","resetForm","find","contact","alert","concat","addContact","_jsxs","Box","sx","marginTop","display","flexDirection","alignItems","mx","width","height","Avatar","m","bgcolor","PersonAddAltIcon","Typography","component","variant","handleSubmit","autoComplete","mt","TextField","margin","fullWidth","id","label","value","onChange","handleChange","touched","Boolean","errors","helperText","type","Button","mb","Contact","_useState","useState","_useState2","_slicedToArray","isBtnActive","setIsBtnActive","justifyContent","border","borderRadius","ml","ContactPhoneIcon","mr","color","textAlign","py","borderRight","borderLeft","IconButton","edge","deleteContact","disabled","DeleteIcon","ContactList","_templateObject3","visibleContacts","fetchContacts","style","gap","map","Filter","boxShadow","pattern","title","setFilterValue","placeholder","Contacts","showModal","setShowModal","hendleShowModal","prevState","my","fontSize"],"sourceRoot":""}